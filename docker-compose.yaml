version: "3.8"

services:
  app-scrapper:
    container_name: app-scrapper
    build:
      context: .
      dockerfile: services/app-scrapper/Dockerfile
    restart: always
    environment:
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_USER=${MONGO_USER}
    healthcheck:
      test: ps -ef | grep "scrapping-service"
      interval: 10s
      retries: 10
    networks:
      - kplc_docker_net

  app-gateway:
    container_name: app-gateway
    build:
      context: services/app-gateway
      dockerfile: Dockerfile
    restart: always
    environment:
      - PORT=${PORT}
    healthcheck:
      test: ping -c3 kplc_docker_net:${PORT}
      interval: 10s
      retries: 10

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  app-notifications:
    container_name: app-notifications
    build:
      context: .
      dockerfile: services/app-notifications/Dockerfile
    restart: always
    environment:
      - PORT=${NOTIFICATIONS_PORT}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_USER=${MONGO_USER}
    healthcheck:
      test: ping -c3 kplc_docker_net:${PORT}
      interval: 10s
      retries: 10
    networks:
      - kplc_docker_net


  mock-server-v1:
    container_name: mock-server-v1
    build:
      context: docs
      dockerfile: Dockerfile
    restart: always
    healthcheck:
      test: ping -c3 kplc_docker_net:4010
      interval: 10s
      retries: 10


  # Third party services
  kplc_mongo:
    container_name: kplc_mongo
    build:
      context: services/app-db
      dockerfile: Dockerfile
    environment:
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_USER=${MONGO_USER}
    volumes:
      - keniapowervol:/data/db
    networks:
      - kplc_docker_net
    healthcheck:
      test: ping -c3 kplc_docker_net:${MONGO_PORT}
      interval: 10s
      retries: 10


volumes:
  keniapowervol:
    driver: local
    
networks:
  kplc_docker_net:
    driver: bridge