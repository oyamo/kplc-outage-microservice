version: "3.8"

services:
  app-scrapper:
    container_name: app-scrapper
    build:
      context: .
      dockerfile: services/app-scrapper/Dockerfile
    restart: always
    environment:
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_USER=${MONGO_USER}
    healthcheck:
      test: ping -c3 kplc_docker_net:${STREAMER_PORT}
      interval: 10s
      retries: 10
    networks:
      - kplc_docker_net
    volumes:
      - ./go.work:/app/go.work
      - ./pkg/:/app/pkg/
      - ./proto/:/app/proto/
  app-gateway:
    container_name: app-gateway
    build:
      context: services/app-gateway
      dockerfile: Dockerfile
    restart: always
    environment:
      - PORT=${PORT}
    healthcheck:
      test: ping -c3 kplc_docker_net:${STREAMER_PORT}
      interval: 10s
      retries: 10

  app-notifications:
    container_name: app-notifications
    build:
      context: services/app-notifications
      dockerfile: Dockerfile
    restart: always
    environment:
      - PORT=${PORT}
    healthcheck:
      test: ping -c3 kplc_docker_net:${STREAMER_PORT}
      interval: 10s
      retries: 10


  mock-server-v1:
    container_name: mock-server-v1
    build:
      context: docs
      dockerfile: Dockerfile
    restart: always
    healthcheck:
      test: ping -c3 kplc_docker_net:${STREAMER_PORT}
      interval: 10s
      retries: 10


  # Third party services
  kplc_mongo:
    container_name: kplc_mongo
    build:
      context: services/app-db
      dockerfile: Dockerfile
    environment:
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_USER=${MONGO_USER}
    volumes:
      - keniapowervol:/data/db
    networks:
      - kplc_docker_net


volumes:
  keniapowervol:
    driver: local
    
networks:
  kplc_docker_net:
    driver: bridge